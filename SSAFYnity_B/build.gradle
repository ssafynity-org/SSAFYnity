plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// mysql
	runtimeOnly 'com.mysql:mysql-connector-j'
	// mongodb
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	// Jsoup
	implementation 'org.jsoup:jsoup:1.15.3'
	// elasticsearch
	implementation 'co.elastic.clients:elasticsearch-java:8.13.4'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
	// spring data elasticsearch
	implementation 'org.springframework.data:spring-data-elasticsearch:5.3.3'
	// websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
}

tasks.named('test') {
	useJUnitPlatform()
}

def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

clean {
	delete file(generated)
}